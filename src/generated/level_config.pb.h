// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: level_config.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_level_5fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_level_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_level_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_level_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_level_5fconfig_2eproto;
namespace game {
class LevelConfig;
struct LevelConfigDefaultTypeInternal;
extern LevelConfigDefaultTypeInternal _LevelConfig_default_instance_;
class LevelTable;
struct LevelTableDefaultTypeInternal;
extern LevelTableDefaultTypeInternal _LevelTable_default_instance_;
}  // namespace game
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace game {

// ===================================================================


// -------------------------------------------------------------------

class LevelConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:game.LevelConfig) */ {
 public:
  inline LevelConfig() : LevelConfig(nullptr) {}
  ~LevelConfig() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LevelConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline LevelConfig(const LevelConfig& from) : LevelConfig(nullptr, from) {}
  inline LevelConfig(LevelConfig&& from) noexcept
      : LevelConfig(nullptr, std::move(from)) {}
  inline LevelConfig& operator=(const LevelConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline LevelConfig& operator=(LevelConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LevelConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const LevelConfig* internal_default_instance() {
    return reinterpret_cast<const LevelConfig*>(
        &_LevelConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LevelConfig& a, LevelConfig& b) { a.Swap(&b); }
  inline void Swap(LevelConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LevelConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LevelConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LevelConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LevelConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LevelConfig& from) { LevelConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LevelConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "game.LevelConfig"; }

 protected:
  explicit LevelConfig(::google::protobuf::Arena* arena);
  LevelConfig(::google::protobuf::Arena* arena, const LevelConfig& from);
  LevelConfig(::google::protobuf::Arena* arena, LevelConfig&& from) noexcept
      : LevelConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kDifficultyFieldNumber = 3,
    kMonsterCountFieldNumber = 4,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 difficulty = 3;
  void clear_difficulty() ;
  ::int32_t difficulty() const;
  void set_difficulty(::int32_t value);

  private:
  ::int32_t _internal_difficulty() const;
  void _internal_set_difficulty(::int32_t value);

  public:
  // int32 monster_count = 4;
  void clear_monster_count() ;
  ::int32_t monster_count() const;
  void set_monster_count(::int32_t value);

  private:
  ::int32_t _internal_monster_count() const;
  void _internal_set_monster_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:game.LevelConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      29, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LevelConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LevelConfig& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int32_t id_;
    ::int32_t difficulty_;
    ::int32_t monster_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_level_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class LevelTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:game.LevelTable) */ {
 public:
  inline LevelTable() : LevelTable(nullptr) {}
  ~LevelTable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LevelTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline LevelTable(const LevelTable& from) : LevelTable(nullptr, from) {}
  inline LevelTable(LevelTable&& from) noexcept
      : LevelTable(nullptr, std::move(from)) {}
  inline LevelTable& operator=(const LevelTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline LevelTable& operator=(LevelTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LevelTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const LevelTable* internal_default_instance() {
    return reinterpret_cast<const LevelTable*>(
        &_LevelTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LevelTable& a, LevelTable& b) { a.Swap(&b); }
  inline void Swap(LevelTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LevelTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LevelTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LevelTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LevelTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LevelTable& from) { LevelTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LevelTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "game.LevelTable"; }

 protected:
  explicit LevelTable(::google::protobuf::Arena* arena);
  LevelTable(::google::protobuf::Arena* arena, const LevelTable& from);
  LevelTable(::google::protobuf::Arena* arena, LevelTable&& from) noexcept
      : LevelTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLevelsFieldNumber = 1,
  };
  // repeated .game.LevelConfig levels = 1;
  int levels_size() const;
  private:
  int _internal_levels_size() const;

  public:
  void clear_levels() ;
  ::game::LevelConfig* mutable_levels(int index);
  ::google::protobuf::RepeatedPtrField<::game::LevelConfig>* mutable_levels();

  private:
  const ::google::protobuf::RepeatedPtrField<::game::LevelConfig>& _internal_levels() const;
  ::google::protobuf::RepeatedPtrField<::game::LevelConfig>* _internal_mutable_levels();
  public:
  const ::game::LevelConfig& levels(int index) const;
  ::game::LevelConfig* add_levels();
  const ::google::protobuf::RepeatedPtrField<::game::LevelConfig>& levels() const;
  // @@protoc_insertion_point(class_scope:game.LevelTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LevelTable_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LevelTable& from_msg);
    ::google::protobuf::RepeatedPtrField< ::game::LevelConfig > levels_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_level_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LevelConfig

// int32 id = 1;
inline void LevelConfig::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t LevelConfig::id() const {
  // @@protoc_insertion_point(field_get:game.LevelConfig.id)
  return _internal_id();
}
inline void LevelConfig::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:game.LevelConfig.id)
}
inline ::int32_t LevelConfig::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LevelConfig::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void LevelConfig::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& LevelConfig::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:game.LevelConfig.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LevelConfig::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:game.LevelConfig.name)
}
inline std::string* LevelConfig::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:game.LevelConfig.name)
  return _s;
}
inline const std::string& LevelConfig::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void LevelConfig::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* LevelConfig::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* LevelConfig::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:game.LevelConfig.name)
  return _impl_.name_.Release();
}
inline void LevelConfig::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:game.LevelConfig.name)
}

// int32 difficulty = 3;
inline void LevelConfig::clear_difficulty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difficulty_ = 0;
}
inline ::int32_t LevelConfig::difficulty() const {
  // @@protoc_insertion_point(field_get:game.LevelConfig.difficulty)
  return _internal_difficulty();
}
inline void LevelConfig::set_difficulty(::int32_t value) {
  _internal_set_difficulty(value);
  // @@protoc_insertion_point(field_set:game.LevelConfig.difficulty)
}
inline ::int32_t LevelConfig::_internal_difficulty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.difficulty_;
}
inline void LevelConfig::_internal_set_difficulty(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difficulty_ = value;
}

// int32 monster_count = 4;
inline void LevelConfig::clear_monster_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monster_count_ = 0;
}
inline ::int32_t LevelConfig::monster_count() const {
  // @@protoc_insertion_point(field_get:game.LevelConfig.monster_count)
  return _internal_monster_count();
}
inline void LevelConfig::set_monster_count(::int32_t value) {
  _internal_set_monster_count(value);
  // @@protoc_insertion_point(field_set:game.LevelConfig.monster_count)
}
inline ::int32_t LevelConfig::_internal_monster_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monster_count_;
}
inline void LevelConfig::_internal_set_monster_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monster_count_ = value;
}

// -------------------------------------------------------------------

// LevelTable

// repeated .game.LevelConfig levels = 1;
inline int LevelTable::_internal_levels_size() const {
  return _internal_levels().size();
}
inline int LevelTable::levels_size() const {
  return _internal_levels_size();
}
inline void LevelTable::clear_levels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.levels_.Clear();
}
inline ::game::LevelConfig* LevelTable::mutable_levels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:game.LevelTable.levels)
  return _internal_mutable_levels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::game::LevelConfig>* LevelTable::mutable_levels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:game.LevelTable.levels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_levels();
}
inline const ::game::LevelConfig& LevelTable::levels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:game.LevelTable.levels)
  return _internal_levels().Get(index);
}
inline ::game::LevelConfig* LevelTable::add_levels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::game::LevelConfig* _add = _internal_mutable_levels()->Add();
  // @@protoc_insertion_point(field_add:game.LevelTable.levels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::game::LevelConfig>& LevelTable::levels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:game.LevelTable.levels)
  return _internal_levels();
}
inline const ::google::protobuf::RepeatedPtrField<::game::LevelConfig>&
LevelTable::_internal_levels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.levels_;
}
inline ::google::protobuf::RepeatedPtrField<::game::LevelConfig>*
LevelTable::_internal_mutable_levels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.levels_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace game


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_level_5fconfig_2eproto_2epb_2eh
